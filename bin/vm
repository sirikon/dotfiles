#!/usr/bin/env bash
set -euo pipefail

imagesPath="/var/lib/libvirt/images"

function install-deps {
    sudo pacman -Syu qemu libvirt cdrkit virt-manager firewalld
    sudo systemctl enable --now firewalld
    sudo systemctl restart libvirtd
}

function download-base {(
    sudo rm -rf "${imagesPath}/base"
    sudo mkdir -p "${imagesPath}/base"
    cd "${imagesPath}/base"
    sudo wget -O focal.img https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64-disk-kvm.img
)}

function base-info {(
    qemu-img info "${imagesPath}/base/focal.img"
)}

function instance-info {(
    qemu-img info "${imagesPath}/instance/focal.qcow2"
)}

function create-instance {(
    sudo rm -rf "${imagesPath}/instance"
    sudo mkdir -p "${imagesPath}/instance"
    sudo qemu-img create -f qcow2 \
        -o backing_file="${imagesPath}/base/focal.img" \
        "${imagesPath}/instance/focal.qcow2"
    sudo qemu-img resize "$(pwd)/vm/instance/focal.qcow2" 5G

    cd "${imagesPath}/instance"
    PUB_KEY=$(cat ~/.ssh/id_rsa.pub)
    sudo tee meta-data <<EOF
local-hostname: instance
EOF
    sudo tee user-data <<EOF
#cloud-config

users:
  - name: ubuntu
    ssh-authorized-keys:
      - $PUB_KEY
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash
    
runcmd:
  - echo "AllowUsers ubuntu" >> /etc/ssh/sshd_config
  - restart ssh
EOF

    sudo genisoimage \
        -output "$(pwd)/instance.iso" \
        -volid cidata -joliet -rock user-data meta-data
)}

function run-instance {
    sudo virt-install \
        --connect qemu:///system \
        --virt-type kvm --name instance \
        --ram 2048 --vcpus=1 --os-type linux --os-variant ubuntu20.04 \
        --disk path="${imagesPath}/instance/focal.qcow2",format=qcow2 \
        --disk "${imagesPath}/instance/instance.iso",device=cdrom \
        --import --network network=default --noautoconsole
}

function destroy-instance {
    sudo virsh shutdown instance
    sudo virsh undefine instance
}

"$1"
