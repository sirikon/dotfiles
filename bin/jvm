#!/usr/bin/env bash
set -euo pipefail

JAVA_VERSIONS_FILE="$(realpath "$(dirname "${BASH_SOURCE[0]}")")/../assets/java-versions"
JAVA_INSTALLATION_FOLDER="${HOME}/.java-installations"

function main {
    javaVersion="${1:-""}"
    if [ ! "$javaVersion" = "" ]; then
        use-command "$javaVersion"
    else
        list-command
    fi
}

function list-command {
    while read -r version _
    do
        printf "%s\n" "$version"
    done < "$JAVA_VERSIONS_FILE"
}

function use-command {
    javaVersion="${1}"
	if [ "$javaVersion" == "" ]; then
		printf "Java version is missing\n"
		printf "Usage: ourcraft java-use <javaVersion>\n"
	fi
	ensure-java-downloaded "$javaVersion"
    enable-java-version "$javaVersion"
}

function unknown-command {
	printf "Unknown command '%s'\n" "$1"
}

function ensure-java-downloaded {
	javaVersion="$1"
	javaVersionLink=$(get-java-version-link "$javaVersion")
	javaFolder="${JAVA_INSTALLATION_FOLDER}/${javaVersion}"
	if [ ! -d "$javaFolder" ]; then
		printf "%s\n" "Java version '${javaVersion}' is not installed. Downloading..."
		mkdir -p "$javaFolder"
		curl -LQ# "$javaVersionLink" --output "$javaFolder/java.tar.gz"
		(
			cd "$javaFolder"
			printf "Extracting...\n"
			tar --strip-components=1 -xzf java.tar.gz
			rm java.tar.gz
			printf "Installed.\n"
		)
	fi
}

function get-java-version-link {
	javaVersion="$1"
	awk -v javaVersion="$javaVersion" '{if($1 == javaVersion){print $2}}' "${JAVA_VERSIONS_FILE}" | head -n 1
}

function enable-java-version {
    javaVersion="$1"
    export JAVA_HOME="${JAVA_INSTALLATION_FOLDER}/${javaVersion}"
    if grep -q "$JAVA_INSTALLATION_FOLDER" <<< $PATH; then
        PATH=$(printf "%s" "$PATH" | sed "s|${JAVA_INSTALLATION_FOLDER}/[a-zA-Z0-9]*/bin|${JAVA_INSTALLATION_FOLDER}/${javaVersion}/bin|g")
		export PATH
    else
        export PATH="${JAVA_INSTALLATION_FOLDER}/${javaVersion}/bin:$PATH"
    fi
}

main "$@"
set +euo pipefail
